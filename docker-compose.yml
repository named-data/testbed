# This file is a part of the testbed project.
# Please read the comments below carefully if you are changing this file.
# 1. Volume mounts MUST use ${PWD} instead of .

name: testbed
services:
  master:
    image: ghcr.io/named-data/testbed-master:20240906
    init: true
    tty: true
    volumes:
      - ${PWD}:/testbed
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      MANAGED_HOST: ${MANAGED_HOST}
      ROOT_DIR: ${PWD}
    entrypoint: /bin/bash
    command: [scripts/master.sh]
    working_dir: /testbed
    restart: unless-stopped
    healthcheck:
      test: [CMD, stat, /testbed/dist/.master-ready]
      interval: 3s
    logging:
      driver: local

  caddy:
    image: ghcr.io/named-data/testbed-caddy:20240906
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ${PWD}/dist/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ${PWD}/dist/caddy/data:/data
      - ${PWD}/dist/caddy/config:/config
      - ${PWD}/dist/file-server:/srv/file-server:ro
    restart: unless-stopped
    depends_on:
      master: { condition: service_healthy }
    logging:
      driver: local

  nfd:
    image: ghcr.io/named-data/nfd:20250220
    init: true
    volumes:
      - /run/nfd:/run/nfd
      - ${PWD}/anchors:/keys/anchors:ro
      - ${PWD}/dist/nfd:/config
    ports:
      - 6363:6363
      - 6363:6363/udp
    entrypoint: /bin/bash
    command: /config/entrypoint.sh
    restart: unless-stopped
    healthcheck:
      test: [CMD, nfdc, status]
      interval: 1m
      start_period: 30s
    depends_on:
      master: { condition: service_healthy }
    logging:
      driver: local

  nfd-http-status-server:
    image: ghcr.io/named-data/nfd-status-http-server:20250220
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
    logging:
      driver: local

  ndnpingserver:
    image: ghcr.io/named-data/ndn-tools:20250220
    tty: true
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndnpingserver:/config
    entrypoint: /bin/bash
    command: /config/entrypoint.sh
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
    logging:
      driver: local

  serve-certs:
    image: ghcr.io/yoursunny/ndn6-tools:20240505
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndncert/site.ndncert:/certs/site.ndncert:ro
      - ${PWD}/anchors:/keys/anchors:ro
    entrypoint: /bin/bash
    command: ['-c', 'ndn6-serve-certs /keys/anchors/*.base64 /certs/*.ndncert']
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
    logging:
      driver: local

  nlsr:
    image: ghcr.io/named-data/nlsr:20250220
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/anchors:/keys/anchors:ro
      - ${PWD}/dist/nlsr:/config
    environment:
      NDN_LOG: nlsr.*=DEBUG
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
      serve-certs: { condition: service_started }
    logging:
      driver: local

  mongodb:
    image: mongo:${MONGO_TAG:-7}
    volumes:
      - ${PWD}/dist/mongodb:/data/db
    depends_on:
      master: { condition: service_healthy }
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | ${MONGO_SH:-mongosh} --quiet
      start_period: 30s
    logging:
      driver: local

  ndn-python-repo:
    image: ghcr.io/ucla-irl/ndn-python-repo:20240508
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndn-python-repo:/config
      - ${PWD}/dist/ndn-python-repo/repo.conf:/config/repo.conf:ro
    ports:
      - 7378:7378
    environment:
      HOME: /config
    restart: unless-stopped
    depends_on:
      mongodb: { condition: service_healthy }
      nfd: { condition: service_healthy }
    logging:
      driver: local

  ndncert:
    image: ghcr.io/named-data/ndncert-ca:20241224
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/ndncert:/config
      - ${PWD}/dist/ndncert/ndncert-mail.conf:/etc/ndncert/ndncert-mail.conf:ro
      - ${PWD}/dist/ndncert/ndncert-ca.conf:/config/ndncert-ca.conf:ro
    environment:
      NDN_LOG: '*=TRACE'
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
    logging:
      driver: local

  root-http-ca:
    image: ghcr.io/named-data/testbed-master:20240512
    profiles: [root-ca]  # in .env
    init: true
    tty: true
    volumes:
      - ${PWD}/root-ca-home:/config
      - ${PWD}/dist/root-http-ca/cert-store:/config/cert-store
      - ${PWD}/dist/root-http-ca/http-ca-server.yml:/config/http-ca-server.yml:ro
      - ${PWD}/framework/http-ca-server.py:/app/http-ca-server.py:ro
    environment:
      HOME: /config
    entrypoint: /app/http-ca-server.py
    command: /config/http-ca-server.yml
    restart: unless-stopped
    depends_on:
      master: { condition: service_healthy }
    logging:
      driver: local

  root-ndncert:
    image: ghcr.io/named-data/ndncert-ca:20241224
    profiles: [root-ca]  # in .env
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/root-ca-home:/config
      - ${PWD}/dist/root-ndncert/root-mail.conf:/etc/ndncert/ndncert-mail.conf:ro
      - ${PWD}/dist/root-ndncert/root-ca.conf:/config/ndncert-ca.conf:ro
    environment:
      NDN_LOG: '*=TRACE'
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
    logging:
      driver: local

  file-server:
    image: ghcr.io/yoursunny/ndn6-tools:20240505
    init: true
    volumes:
      - /run/nfd:/run/nfd:ro
      - ${PWD}/dist/file-server:/app:ro
      - ${PWD}/dist/nlsr:/config
    entrypoint: /bin/bash
    command: /app/entrypoint.sh
    restart: unless-stopped
    depends_on:
      nfd: { condition: service_healthy }
    logging:
      driver: local
